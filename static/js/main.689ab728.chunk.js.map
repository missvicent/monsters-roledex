{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","id","name","email","className","alt","src","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","event","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAIaA,EAAO,SAACC,GACjB,IAAQC,EAAYD,EAAZC,QACAC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAElB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BL,EAA1B,yBACtB,6BAAKC,IACL,4BAAIC,QCNHI,G,MAAW,SAACR,GACrB,OAAQ,qBAAKK,UAAU,YAAf,SAEFL,EAAMS,SAASC,KAAI,SAAAT,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLhBS,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAErC,OACI,8BACI,uBAAOR,UAAU,SAASS,KAAK,SAASF,YAAaA,EAAcG,SAAUF,QCqC1EG,G,wDApCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDAShB,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAI1C,WAAU,IAAD,OACL,EAAkCE,KAAKR,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YAMZQ,EAAmBjB,EAASkB,QAChC,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASX,EAAYY,wBAG7D,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWQ,aAVE,SAACkB,GAChB,EAAKP,SAAS,CAACN,YAAaa,EAAMC,OAAOC,SASJrB,YAAY,oBAC/C,cAAC,EAAD,CAAUH,SAAUiB,W,GAhCVQ,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.689ab728.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    const { monster } = props;\n    const { id, name, email } = monster;\n\n    return (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${id}set=set2&size=50x50`} />\n            <h1>{name}</h1>\n            <p>{email}</p>\n        </div>\n    );\n}","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n    return (<div className=\"card-list\">\n        {\n          props.monsters.map(monster => \n          <Card key={monster.id} monster={monster} />\n        )}\n    </div>)\n} ","import React from \"react\";\n\nimport './search-box.styles.css';\n\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\n    return (\n        <div>\n            <input className=\"search\" type=\"search\" placeholder={placeholder}  onChange={handleChange}/>\n        </div>\n    );\n\n}","import React, {Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list-component';\n\nimport { SearchBox } from './components/search-box/search-box-component';\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n}\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters: users}))\n}\n\n\nrender() {\n    const { monsters, searchField } = this.state;\n\n    const onChange = (event) => {\n      this.setState({searchField: event.target.value});\n    }\n\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <SearchBox handleChange={onChange} placeholder=\"search monsters\" />\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}